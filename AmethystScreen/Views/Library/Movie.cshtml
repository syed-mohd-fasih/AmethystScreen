@model AmethystScreen.ViewModels.MovieDetails
@using AmethystScreen.Services;
@{
    ViewData["Title"] = Model.Movie.Title;
}

<head>
    <style>
        main {
            height: 100%;
            width: 100%;
        }

        .card:hover {
            transform: none;
            box-shadow: none;
        }

        #movie-image-container {
            display: block;
            overflow: hidden;
            position: relative;
            transition: transform 0.3s ease-in-out;
        }

            #movie-image-container::after {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0);
                transition: background 0.3s ease-in-out;
                pointer-events: none;
            }

            #movie-image-container:hover::after {
                background: rgba(0, 0, 0, 0.5);
            }

        #movie-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
            border: 5px solid blueviolet;
        }

        #movie-desc-container {
            background-color: blueviolet;
            color: black;
            display: block;
        }

        #movie-video-container {
            position: relative;
            width: 100%;
            height: 100%;
            margin: auto;
            background-color: black;
            border: solid 8px blueviolet;
            border-radius: 5px;
        }

        #movie-video {
            object-fit: cover;
            margin-top: 100px;
            margin-bottom: 100px;
        }

        #library-btn {
            position: absolute;
            top: 0;
            right: 0;
            margin-top: 5px;
            margin-right: 5px;
            z-index: 10;
            height: 50px;
            width: 50px;
        }

        .plyr {
            --plyr-color-main: blueviolet;
            --plyr-video-control-color: blueviolet;
            --plyr-video-control-color-hover: black;
            --plyr-captions-text-color: khaki;
        }

        #custom-play-button {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            cursor: pointer;
            z-index: 10;
            transition: transform 0.5s ease-in-out;
            display: block;
        }

            #custom-play-button img {
                width: 100px;
                height: 100px;
            }

            #custom-play-button:hover {
                transform: translate(-50%, -50%) rotate(360deg);
            }

        .card-title {
            font-size: 1.5rem;
        }

        .card-info {
            font-size: 0.8rem;
        }

        .card-desc {
            font-size: 1rem;
        }

        .btn-close::before, .btn-close::after {
            background-color: black;
        }

        .btn-close:hover {
            opacity: 1;
        }

        .icon {
            height: 25px;
            width: 25px;
        }

        .icon-sm {
            height: 20px;
            width: 20px;
        }

        .comments-list:before {
            content: '';
            width: 2px;
            height: 100%;
            background: #c7cacb;
            position: absolute;
            left: 55px;
            top: 0;
        }

        .comments-list:after {
            content: '';
            position: absolute;
            background: #c7cacb;
            bottom: 0;
            left: 53px;
            width: 7px;
            height: 7px;
            border: 3px solid #dee1e3;
            -webkit-border-radius: 50%;
            -moz-border-radius: 50%;
            border-radius: 50%;
        }

        .reply-list:before, .reply-list:after {
            display: none;
        }

        .reply-list li:before {
            content: '';
            width: 60px;
            height: 2px;
            background: #c7cacb;
            position: absolute;
            top: 25px;
            left: -55px;
        }


        .comments-list li {
            margin-bottom: 15px;
            display: block;
            position: relative;
        }

            .comments-list li:after {
                content: '';
                display: block;
                clear: both;
                height: 0;
                width: 0;
            }

        .reply-list {
            padding-left: 88px;
            clear: both;
            margin-top: 15px;
        }

        .comments-list .comment-avatar {
            width: 65px;
            height: 65px;
            position: relative;
            float: left;
            border: 2px solid blueviolet;
            border-radius: 4px;
            overflow: hidden;
        }

            .comments-list .comment-avatar img {
                width: 100%;
                height: 100%;
            }

        .reply-list .comment-avatar {
            width: 50px;
            height: 50px;
        }

        .comments {
            position: relative;
            width: 100%;
            height: 100%;
        }

        .input-group.comments-input-group {
            width: 80%;
            left: 80px;
            float: left;
        }

        .reply-field-container {
            display: none;
        }
    </style>
    <link rel="stylesheet" href="https://cdn.plyr.io/3.6.8/plyr.css" />
    <script src="https://cdn.plyr.io/3.6.8/plyr.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const controls = [
                //'play-large', // Large play button
                'rewind',
                'play', // Play button
                'fast-forward',
                'progress', // Progress bar
                'current-time',
                'duration',
                'mute', // Speaker
                'volume', // Volume control bar
                'captions', // Toggle captions (if available)
                'settings', // Settings
                'fullscreen' // Fullscreen button
            ];

            const settings = [
                'captions',
                'quality',
                'speed',
                'loop'
            ];

            const player = Plyr.setup('.plyr', { controls, settings });

            const playerControls = document.querySelector('.plyr__controls');
            playerControls.style.display = 'none';
        });
    </script>
</head>

<div class="card h-100 w-100 position-relative prevent-select">
    <a type="button" asp-action="Index" class="btn-close m-0" id="library-btn"></a>
    <div class="row g-0">
        <div class="col-md-4" id="movie-image-container">
            <img src="@Model.Movie.Image" class="h-100 w-100 rounded-3" id="movie-image" alt="@Model.Movie.Title" />
        </div>
        <div class="col-md-8 rounded-3" id="movie-desc-container">
            <div class="card-body">
                <p class="card-title lato-bold">@Model.Movie.Title</p>
                <hr class="mb-2 mt-2" />
                <div class="card-info">
                    <p class="lato-light mb-0">@Model.Movie.Year</p>
                    <p class="lato-light mb-0">[@Model.Movie.Language]</p>
                    <p class="lato-light mb-0">@String.Join(", ", Model.Movie.Tags)</p>
                    <p class="mb-0">IMDB Rating: <span class="lato-bold">@Model.Movie.Rating</span></p>
                </div>
                <hr class="mb-2 mt-2" />
                <div class="card-desc">
                    <p class="mb-0"><strong>Synopsis:</strong></p>
                    <p class="">@Model.Movie.Description</p>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="movie-video-container" class="d-flex align-items-center justify-content-center visually-hidden prevent-select">
    <div id="custom-play-button">
        <img class="rotate-anim" src="~/assets/play_button.png" alt="Play" />
    </div>
    <video id="movie-video" class="plyr m-0 p-0" controls>
        <source src="/library/video/@Model.Movie.VideoUrl" type="video/mp4">
        <source src="/library/video/@Model.Movie.VideoUrl" type="video/webm">
        <source src="/library/video/@Model.Movie.VideoUrl" type="video/x-msvideo">
        <source src="/library/video/@Model.Movie.VideoUrl" type="video/quicktime">
        <source src="/library/video/@Model.Movie.VideoUrl" type="video/x-ms-wmv">
        <source src="/library/video/@Model.Movie.VideoUrl" type="video/x-matroska">
        <source src="/library/video/@Model.Movie.VideoUrl" type="video/mpeg">
        Your browser does not support the video tag.
    </video>
</div>

<div class="menu-container d-flex flex-row m-auto mt-2">
    <form class="m-1" method="post" asp-action="LikeMovie" asp-controller="Library">
        <input type="hidden" name="movieSlug" value="@Model.Movie.Slug" />
        <button class="btn bg-bv">
            <div class="d-flex flex-row m-auto">
                @if (Model.IsLikedByUser)
                {
                    <img src="~/assets/like.png" class="icon" />
                }
                else
                {
                    <img src="~/assets/heart.png" class="icon" />
                }
                <span class="m-auto ms-2">
                    @if (Model.IsLikedByUser)
                    {
                        <span>Unlike</span>
                    }
                    else
                    {
                        <span>Like</span>
                    }
                    <span class="m-auto ms-2">@Model.Movie.Likes</span>
                </span>
            </div>
        </button>
    </form>

    <form class="m-1" method="post" asp-action="Report" asp-controller="Library">
        <input type="hidden" name="movieSlug" value="@Model.Movie.Slug" />
        <button class="btn bg-bv">
            <div class="d-flex flex-row m-auto">
                <img src="~/assets/flag.png" class="icon" />
                <span class="m-auto ms-2">Report</span>
            </div>
        </button>
    </form>
</div>

<div class="add-comment mt-2">
    <form method="post" asp-action="AddComment" asp-controller="Library" class="mb-3">
        <div class="input-group">
            <input type="hidden" name="movieSlug" value="@Model.Movie.Slug" />
            <input type="text" class="form-control bg-black text-light rounded-start" name="content" placeholder="Drop your comment here..." />
            <input type="submit" value="Comment" class="btn text-dark bg-bv" />
        </div>
    </form>
</div>

<div id="comments-container" class="comments-container mt-3">
    <hr />
    <p class="fs-1 fc-bv mt-2">Comments</p>
    <hr />

    <ul class="comments-list ps-4 mt-4">
        @if (Model.Comments != null && Model.Comments.Any())
        {
            @foreach (var Comment in Model.Comments)
            {
                <li>
                    <div class="comment-main-level">
                        <partial name="_CommentPartial" model="Comment" class="author" />
                    </div>
                </li>
            }
        }
        else
        {
            <li>
                <p>Be the first to comment!</p>
            </li>
        }
    </ul>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const imageEl = document.getElementById('movie-image-container');
        const videoEl = document.getElementById('movie-video-container');
        const descEl = document.getElementById('movie-desc-container');
        const buttonEl = document.getElementById('library-btn')
        const mainEl = document.querySelector('main');

        imageEl.addEventListener('click', function () {
            if (videoEl.classList.contains('visually-hidden')) {
                videoEl.classList.remove('visually-hidden');
                imageEl.style.display = 'none';
                descEl.style.display = 'none';
                buttonEl.style.display = 'none';
                videoEl.style.display = 'flex';
            }
        });

        const playbutton = document.getElementById('custom-play-button');
        const player = new Plyr('#movie-video');
        const playerControls = document.querySelector('.plyr__controls');
        const playerPoster = document.querySelector('.plyr__poster');

        playbutton.addEventListener('click', function () {
            playbutton.style.display = 'none';
            playerControls.style.display = 'flex';
            player.play();
        });

        playerPoster.addEventListener('click', function () {
            if (player.paused) {
                playbutton.style.display = 'none';
                playerControls.style.display = 'flex';
                player.play();
            }
        });

        var comments = document.querySelectorAll('.comment');

        comments.forEach(function (comment) {
            var replyBtn = comment.querySelector('.reply-btn');
            var replyFieldContainer = comment.querySelector('.reply-field-container');

            replyBtn.addEventListener('click', function () {
                if (replyFieldContainer.style.display === 'none' || replyFieldContainer.style.display === '') {
                    replyFieldContainer.style.display = 'block';
                } else {
                    replyFieldContainer.style.display = 'none';
                }
            });
        });
    });
</script>
